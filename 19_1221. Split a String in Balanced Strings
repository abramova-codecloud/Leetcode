/**
Balanced strings are those who have equal quantity of 'L' and 'R' characters.
Given a balanced string s split it in the maximum amount of balanced strings.
Return the maximum amount of splitted balanced strings.

Example 1:
Input: s = "RLRRLLRLRL"
Output: 4
Explanation: s can be split into "RL", "RRLL", "RL", "RL", each substring contains same number of 'L' and 'R'.

MY_SOLUTION:
Runtime: 0 ms, faster than 100.00% of Java online submissions for Split a String in Balanced Strings.
Memory Usage: 37.5 MB, less than 29.07% of Java online submissions for Split a String in Balanced Strings.
*/

class Solution {
    public int balancedStringSplit(String s) {
        int n = 0;
        int sum = 0;
        for (int i = 0; i < s.length(); i++) {
                sum += s.charAt(i) == 'R' ? 1 : -1;            
            if (sum == 0) {
                n = n + 1;
            }        
        }        
        return n;
    }
}