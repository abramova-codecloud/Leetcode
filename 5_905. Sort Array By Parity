/**
Given an array A of non-negative integers, return an array consisting 
of all the even elements of A, followed by all the odd elements of A.
You may return any answer array that satisfies this condition.

Example 1:
Input: [3,1,2,4]
Output: [2,4,3,1]
The outputs [4,2,3,1], [2,4,1,3], and [4,2,1,3] would also be accepted.

Note:
    1 <= A.length <= 5000
    0 <= A[i] <= 5000


MY SOLUTION:
Runtime: 1 ms, faster than 99.50% of Java online submissions for Sort Array By Parity.
Memory Usage: 40.2 MB, less than 66.59% of Java online submissions for Sort Array By Parity.
*/

class Solution {
    public int[] sortArrayByParity(int[] A) {
        int i = 0;
        int n = -1;
        int m = A.length;
        int j = A.length;
        if (A.length == 1) return A;
        while (i < j) {
        for (i = n; i < A.length -1 ;) {
            i = i+1;
            if (A[i]%2 != 0) break;
        }            
         for (j = m; j > 1;) {
            j = j - 1;
            if (A[j]%2 == 0) break;
        }      
            n = i;
            m = j;
            if (j > i) {
                int k = A[i];
                A[i] = A[j];
                A[j] = k;
            }
        }
        return A;
    }
}